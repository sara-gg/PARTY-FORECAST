{"ast":null,"code":"var _jsxFileName = \"/Users/rushabhmehta/Codeworks/Legacy Project/PARTY-FORECAST/src/components/HostAParty/HostAParty.js\";\nimport React, { useRef, useState } from \"react\";\nimport axios from 'axios';\nimport '../../index.css';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport mapStyles2 from \"../../mapStyles2.js\";\nimport PartyList from '../PartyList/PartyList.js';\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  height: \"100vh\",\n  width: \"100vw\"\n};\nconst options = {\n  styles: mapStyles2,\n  disableDefaultUI: true,\n  zoomControl: true\n};\nconst center = {\n  lat: 41.3851,\n  lng: 2.1734\n};\nexport default function HostAParty({\n  userId\n}) {\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries\n  });\n  const [parties, setParties] = React.useState([]);\n  const [partyList, setPartyList] = React.useState([]);\n  const initialState = {\n    artists: null,\n    venue: null,\n    date: null,\n    genre: null,\n    lat: null,\n    lng: null,\n    instagram: null\n  };\n  const [state, setState] = React.useState(initialState);\n  const [selected, setSelected] = React.useState(null);\n  const [submitted, setSubmitted] = React.useState(false);\n  const [fileInputState, setFileInputState] = useState('');\n  const [previewSource, setPreviewSource] = useState('');\n  const [selectedFile, setSelectedFile] = useState();\n  const markerRef = React.useRef(null);\n  React.useEffect(() => {\n    const getDataAxios = async () => {\n      const {\n        data: parties\n      } = await axios.get('http://localhost:3001/parties');\n      const filteredParties = parties.filter(party => Date.parse(party.date) > Date.now() && party.userId == userId);\n      await setPartyList(filteredParties);\n    };\n\n    getDataAxios(); //calling the above created function\n  }, [userId]);\n  React.useEffect(() => {\n    const listener = e => {\n      if (e.key === \"Escape\") {\n        setSelected(null);\n      }\n    };\n\n    window.addEventListener(\"keydown\", listener);\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, []); //CLOUDINARY\n\n  const handleFileInputChange = e => {\n    const file = e.target.files[0];\n    previewFile(file);\n    setSelectedFile(file);\n    setFileInputState(e.target.value);\n  };\n\n  const previewFile = file => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    mapRef.current = map;\n  }, []);\n  const panTo = React.useCallback(({\n    lat,\n    lng\n  }) => {\n    setTimeout(() => {\n      mapRef.current.panTo({\n        lat,\n        lng\n      });\n      mapRef.current.setZoom(17);\n    }, 1000);\n  }, []);\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n\n  const onMapClick = e => {\n    console.log(e.latLng.lat());\n    panTo({\n      lat: e.latLng.lat(),\n      lng: e.latLng.lng()\n    }); // to make map pan to the marker\n\n    setParties(current => [// ...current, // to render only one marker\n    {\n      lat: e.latLng.lat(),\n      lng: e.latLng.lng(),\n      time: new Date()\n    }]);\n  }; //for the form\n\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setState(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const generateIconURL = genre => {\n    switch (genre) {\n      case 'JAZZ':\n        return '/jazz.svg';\n\n      case 'EDM':\n        return '/musician.svg';\n\n      case 'ROCK':\n        return '/rock2.svg';\n\n      case 'TECHNO':\n        return '/techno-music.svg';\n\n      case 'LATINO':\n        return '/woman.svg';\n\n      case 'PSY':\n        return '/trance.png';\n\n      default:\n        return '/latin.png';\n    }\n  };\n\n  let party;\n  let daImageURL;\n\n  const handleSubmit = async e => {\n    e.preventDefault(); //code for cloudinary handlesubmit\n\n    if (!previewFile) return;\n    const reader = new FileReader();\n    reader.readAsDataURL(selectedFile);\n\n    reader.onloadend = () => {\n      uploadImage(reader.result);\n    };\n\n    reader.onerror = () => {\n      console.error('AHHHHHHHH!!');\n    };\n  };\n\n  async function uploadImage(base64EncodedImage) {\n    try {\n      fetch('http://localhost:3001/api/upload', {\n        method: 'POST',\n        body: JSON.stringify({\n          data: base64EncodedImage\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(async imageURL => {\n        setFileInputState('');\n        const {\n          date,\n          venue,\n          artists,\n          genre,\n          instagram\n        } = state;\n        const latitude = selected.lat;\n        const longitude = selected.lng;\n        const iconURL = generateIconURL(genre);\n        party = {\n          date,\n          venue,\n          artists,\n          genre,\n          latitude,\n          longitude,\n          iconURL,\n          instagram,\n          userId,\n          imageURL\n        };\n        console.log('submitted', party);\n        await axios.post('http://localhost:3001/parties/', {\n          artists: artists,\n          venue: venue,\n          date: date,\n          genre: genre,\n          lat: latitude,\n          lng: longitude,\n          iconURL: iconURL,\n          instagram: instagram,\n          userId: Number(userId),\n          partyImage: imageURL\n        }); //party created message\n\n        setSubmitted(true); //adding to partyList\n\n        const currentPartyList = [...partyList];\n        currentPartyList.push(party); // await setPartyList(currentPartyList);\n        // await setPartyList([...partyList, party]);\n\n        const sortedParties = currentPartyList.sort((a, b) => {\n          if (a.date > b.date) return 1;\n          return -1;\n        });\n        await setPartyList(sortedParties);\n        setState(initialState);\n        setSelected(null);\n      }); // setSuccessMsg('Image uploaded successfully');\n    } catch (err) {\n      console.error(err); // setErrMsg('Something went wrong!');\n    }\n  }\n\n  ;\n\n  const validateForm = () => {\n    return !state.date || !state.venue || !state.artists || !state.genre;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Locate, {\n    panTo: panTo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Search, {\n    panTo: panTo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(GoogleMap, {\n    id: \"map\",\n    mapContainerStyle: mapContainerStyle,\n    zoom: 16,\n    center: center,\n    options: options,\n    onClick: onMapClick,\n    onLoad: onMapLoad,\n    clickableIcons: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }\n  }, parties ? parties.map(party => /*#__PURE__*/React.createElement(Marker, {\n    draggable: true,\n    zIndex: 10,\n    ref: markerRef,\n    animation: window.google.maps.Animation.BOUNCE,\n    key: `${party.lat}-${party.lng}` + Math.random() * 100,\n    position: {\n      lat: party.lat,\n      lng: party.lng\n    },\n    onClick: () => {\n      markerRef.current.animation = window.google.maps.Animation.BOUNCE;\n      setSelected(party);\n    },\n    icon: {\n      url: `/google-maps.svg`,\n      origin: new window.google.maps.Point(0, 0),\n      anchor: new window.google.maps.Point(30, 55),\n      scaledSize: new window.google.maps.Size(60, 50)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 12\n    }\n  }, \"Loading\"), selected ? /*#__PURE__*/React.createElement(InfoWindow, {\n    position: {\n      lat: selected.lat,\n      lng: selected.lng\n    },\n    onCloseClick: () => {\n      setSelected(null);\n      setPreviewSource('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"ui form \",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"venue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 17\n    }\n  }, \"VENUE\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    required: true,\n    placeholder: \"Add venue\",\n    name: \"venue\",\n    value: state.venue,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"genre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 17\n    }\n  }, \"SELECT GENRE\"), /*#__PURE__*/React.createElement(\"select\", {\n    placeholder: \"Select Genre\",\n    required: true,\n    name: \"genre\",\n    value: state.genre,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 19\n    }\n  }, \"Select Genre\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"EDM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 19\n    }\n  }, \"EDM\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"TECHNO\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 19\n    }\n  }, \"TECHNO\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"ROCK\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 19\n    }\n  }, \"ROCK\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"JAZZ\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 19\n    }\n  }, \"JAZZ\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"LATINO\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 19\n    }\n  }, \"LATINO\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"PSY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 19\n    }\n  }, \"JAZZ\")), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"artists\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 17\n    }\n  }, \"ARTISTS\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    required: true,\n    placeholder: \"Artists performing..\",\n    name: \"artists\",\n    value: state.artists,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 17\n    }\n  }, \"DATE & TIME\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"datetime-local\",\n    required: true,\n    name: \"date\",\n    value: state.date,\n    onChange: handleChange,\n    placeholder: \"05/12/2019, 12:09\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"instagram\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 17\n    }\n  }, \"Link to Instagram account\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"string\",\n    required: false,\n    name: \"instagram\",\n    value: state.instagram,\n    onChange: handleChange,\n    placeholder: \"Add link here..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"partyImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 17\n    }\n  }, \"Select Image to upload\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"fileInput\",\n    type: \"file\",\n    name: \"image\",\n    onChange: handleFileInputChange,\n    value: fileInputState,\n    className: \"form-input\",\n    placeholder: \"UpLoad Image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ui animated button primary\",\n    type: \"submit\",\n    disabled: validateForm(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"visible content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 17\n    }\n  }, \"SUBMIT\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"hidden content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    \"aria-hidden\": \"true\",\n    class: \"thumbs up icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 86\n    }\n  }))))) : null, submitted && previewSource ? /*#__PURE__*/React.createElement(InfoWindow, {\n    position: {\n      lat: parties[parties.length - 1].lat,\n      lng: parties[parties.length - 1].lng\n    },\n    style: {\n      width: 'auto',\n      height: 'auto'\n    },\n    onCloseClick: () => {\n      setSelected(null);\n      setSubmitted(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      width: 'auto',\n      height: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      position: 'absolute',\n      top: 120,\n      left: 110\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 15\n    }\n  }, \"Party Registered!!\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: previewSource,\n    alt: \"chosen\",\n    style: {\n      height: '300px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 15\n    }\n  }))) : null, true ? /*#__PURE__*/React.createElement(Marker, {\n    className: \"bounce\",\n    zIndex: 10,\n    animation: window.google.maps.Animation.BOUNCE,\n    key: Math.random() * 100,\n    position: {\n      lat: 41.3851,\n      lng: 2.1734\n    },\n    icon: {\n      url: `/kyle-2.png`,\n      origin: new window.google.maps.Point(0, 0),\n      anchor: new window.google.maps.Point(30, 55),\n      scaledSize: new window.google.maps.Size(60, 50),\n      labelOrigin: new window.google.maps.Point(26, 57)\n    },\n    label: {\n      color: 'crimson',\n      fontWeight: 'bolder',\n      fontSize: '16px',\n      text: 'You are here !',\n      fontFamily: 'Avenir' // origin: new window.google.maps.Point(110, 110),\n      // anchor: new window.google.maps.Point(30, 55),\n\n    },\n    labelAnchor: new window.google.maps.Point(200, 0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 11\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PartyList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }\n  }, partyList ? /*#__PURE__*/React.createElement(PartyList, {\n    partyList: partyList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      zindex: 1000\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 12\n    }\n  }, \"No parties in list\")));\n}\n\nfunction Locate({\n  panTo\n}) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"locate_host\",\n    onClick: () => {\n      window.navigator.geolocation.getCurrentPosition(position => {\n        panTo({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, () => null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/compass.svg\",\n    alt: \"compass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Search({\n  panTo\n}) {\n  const {\n    ready,\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {\n        lat: () => 41.3851,\n        lng: () => 2.1734\n      },\n      radius: 100 * 1000\n    }\n  }); // https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service#AutocompletionRequest\n\n  const handleInput = e => {\n    setValue(e.target.value);\n  };\n\n  const handleSelect = async address => {\n    setValue(address, false);\n    clearSuggestions();\n\n    try {\n      const results = await getGeocode({\n        address\n      });\n      const {\n        lat,\n        lng\n      } = await getLatLng(results[0]);\n      panTo({\n        lat,\n        lng\n      });\n    } catch (error) {\n      console.log(\"😱 Error: \", error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search_host\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Combobox, {\n    onSelect: handleSelect,\n    className: \"ui icon input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxInput, {\n    value: value,\n    onChange: handleInput,\n    disabled: !ready,\n    placeholder: \"Search for location or click on compass\",\n    className: \"ui_search\",\n    id: \"ui_search_find\",\n    style: {\n      fontFamily: 'Avenir',\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    \"aria-hidden\": \"false\",\n    className: \"search icon large\",\n    id: \"search_icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 11\n    }\n  }, status === \"OK\" && data.map(({\n    id,\n    description\n  }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n    key: id + Math.random() * 1000,\n    value: description,\n    style: {\n      fontFamily: 'Avenir',\n      color: 'white',\n      backgroundColor: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 17\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/rushabhmehta/Codeworks/Legacy Project/PARTY-FORECAST/src/components/HostAParty/HostAParty.js"],"names":["React","useRef","useState","axios","GoogleMap","useLoadScript","Marker","InfoWindow","usePlacesAutocomplete","getGeocode","getLatLng","Combobox","ComboboxInput","ComboboxPopover","ComboboxList","ComboboxOption","mapStyles2","PartyList","libraries","mapContainerStyle","height","width","options","styles","disableDefaultUI","zoomControl","center","lat","lng","HostAParty","userId","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","parties","setParties","partyList","setPartyList","initialState","artists","venue","date","genre","instagram","state","setState","selected","setSelected","submitted","setSubmitted","fileInputState","setFileInputState","previewSource","setPreviewSource","selectedFile","setSelectedFile","markerRef","useEffect","getDataAxios","data","get","filteredParties","filter","party","Date","parse","now","listener","e","key","window","addEventListener","removeEventListener","handleFileInputChange","file","target","files","previewFile","value","reader","FileReader","readAsDataURL","onloadend","result","mapRef","onMapLoad","useCallback","map","current","panTo","setTimeout","setZoom","onMapClick","console","log","latLng","time","handleChange","name","prevState","generateIconURL","daImageURL","handleSubmit","preventDefault","uploadImage","onerror","error","base64EncodedImage","fetch","method","body","JSON","stringify","headers","then","res","json","imageURL","latitude","longitude","iconURL","post","Number","partyImage","currentPartyList","push","sortedParties","sort","a","b","err","validateForm","google","maps","Animation","BOUNCE","Math","random","animation","url","origin","Point","anchor","scaledSize","Size","length","display","position","top","left","labelOrigin","color","fontWeight","fontSize","text","fontFamily","zindex","Locate","navigator","geolocation","getCurrentPosition","coords","Search","ready","suggestions","status","setValue","clearSuggestions","requestOptions","location","radius","handleInput","handleSelect","address","results","id","description","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from \"react\";\nimport axios from 'axios';\nimport '../../index.css';\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport usePlacesAutocomplete, {\n  getGeocode,\n  getLatLng,\n} from \"use-places-autocomplete\";\nimport {\n  Combobox,\n  ComboboxInput,\n  ComboboxPopover,\n  ComboboxList,\n  ComboboxOption,\n} from \"@reach/combobox\";\n\n\nimport \"@reach/combobox/styles.css\";\n\nimport mapStyles2 from \"../../mapStyles2.js\";\nimport PartyList from '../PartyList/PartyList.js';\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  height: \"100vh\",\n  width: \"100vw\",\n};\nconst options = {\n  styles: mapStyles2,\n  disableDefaultUI: true,\n  zoomControl: true,\n};\nconst center = {\n  lat: 41.3851,\n  lng: 2.1734,\n};\n\n\nexport default function HostAParty({userId}) {\n\n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries,\n  });\n\n  const [parties, setParties] = React.useState([]);\n  const [partyList,setPartyList] = React.useState([]);\n\n  const initialState = {\n    artists: null,\n    venue: null,\n    date: null,\n    genre: null,\n    lat: null,\n    lng: null,\n    instagram: null\n  }\n\n  const [state, setState] = React.useState(initialState);\n  const [selected, setSelected] = React.useState(null);\n  const [submitted,setSubmitted] = React.useState(false);\n  const [fileInputState, setFileInputState] = useState('');\n  const [previewSource, setPreviewSource] = useState('');\n  const [selectedFile, setSelectedFile] = useState();\n\n  const markerRef = React.useRef(null);\n\n\n\n  React.useEffect(()=> {\n  const getDataAxios = async () => {\n    const {data:parties} = await axios.get('http://localhost:3001/parties');\n\n    const filteredParties = parties.filter(party => (Date.parse(party.date) > Date.now()) && (party.userId == userId))\n    await setPartyList(filteredParties);\n  }\n  getDataAxios(); //calling the above created function\n},[userId]);\n\n  React.useEffect(() => {\n    const listener = e => {\n      if (e.key === \"Escape\") {\n          setSelected(null);\n      }\n    };\n    window.addEventListener(\"keydown\", listener);\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  },\n  []);\n  //CLOUDINARY\n\n  const handleFileInputChange = (e) => {\n    const file = e.target.files[0];\n    previewFile(file);\n    setSelectedFile(file);\n    setFileInputState(e.target.value);\n  };\n\n  const previewFile = (file) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n\n\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n\n  const panTo = React.useCallback(({ lat, lng }) => {\n    setTimeout(() => {\n      mapRef.current.panTo({ lat, lng });\n      mapRef.current.setZoom(17);\n    },1000)\n  }, []);\n\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n\n  const onMapClick = (e) => {\n    console.log(e.latLng.lat());\n    panTo({\n      lat: e.latLng.lat(),\n      lng: e.latLng.lng(),\n    }); // to make map pan to the marker\n    setParties((current) => [\n      // ...current, // to render only one marker\n      {\n        lat: e.latLng.lat(),\n        lng: e.latLng.lng(),\n        time: new Date(),\n      },\n    ]);\n  };\n\n//for the form\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setState((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const generateIconURL = (genre) => {\n    switch(genre) {\n      case 'JAZZ':\n        return '/jazz.svg';\n      case 'EDM':\n        return '/musician.svg';\n      case 'ROCK':\n        return '/rock2.svg';\n      case 'TECHNO':\n        return '/techno-music.svg';\n      case 'LATINO':\n        return '/woman.svg';\n      case 'PSY':\n        return '/trance.png';\n      default:\n        return '/latin.png';\n    }\n  }\n\n  let party;\n  let daImageURL;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n     //code for cloudinary handlesubmit\n    if (!previewFile) return;\n    const reader = new FileReader();\n    reader.readAsDataURL(selectedFile);\n    reader.onloadend = () => {\n        uploadImage(reader.result);\n    };\n    reader.onerror = () => {\n        console.error('AHHHHHHHH!!');\n\n    };\n\n  };\n\n  async function uploadImage (base64EncodedImage) {\n    try {\n        fetch('http://localhost:3001/api/upload', {\n            method: 'POST',\n            body: JSON.stringify({ data: base64EncodedImage }),\n            headers: { 'Content-Type': 'application/json' },\n        })\n          .then(res => res.json())\n          .then( async imageURL => {\n\n            setFileInputState('');\n            const { date, venue, artists, genre, instagram } = state;\n            const latitude = selected.lat;\n            const longitude = selected.lng;\n            const iconURL = generateIconURL(genre);\n            party = { date, venue, artists, genre, latitude, longitude,iconURL,instagram,userId, imageURL }\n            console.log('submitted', party)\n\n            await axios.post('http://localhost:3001/parties/', {\n              artists: artists,\n              venue: venue,\n              date: date,\n              genre: genre,\n              lat: latitude,\n              lng: longitude,\n              iconURL : iconURL,\n              instagram : instagram,\n              userId : Number(userId),\n              partyImage : imageURL\n              })\n              //party created message\n            setSubmitted(true);\n\n            //adding to partyList\n            const currentPartyList = [...partyList];\n\n            currentPartyList.push(party);\n            // await setPartyList(currentPartyList);\n            // await setPartyList([...partyList, party]);\n            const sortedParties = currentPartyList.sort((a, b) => {\n              if(a.date > b.date) return 1;\n              return -1;\n            });\n            await setPartyList(sortedParties);\n\n            setState(initialState);\n            setSelected(null);\n\n\n\n          })\n\n\n        // setSuccessMsg('Image uploaded successfully');\n    } catch (err) {\n        console.error(err);\n        // setErrMsg('Something went wrong!');\n    }\n  };\n\n  const validateForm = () => {\n    return (\n      !state.date || !state.venue || !state.artists || !state.genre\n    );\n  };\n\n\n\n  return (\n    <div>\n      <div className=\"options\">\n        <Locate panTo={panTo} />\n        <Search panTo={panTo} />\n      </div>\n\n      <GoogleMap\n        id=\"map\"\n        mapContainerStyle={mapContainerStyle}\n        zoom={16}\n        center={center}\n        options={options}\n        onClick={onMapClick}\n        onLoad={onMapLoad}\n        clickableIcons={true}\n      >\n        {parties ? parties.map((party) => (\n          <Marker\n            draggable={true}\n            zIndex={10}\n            ref={markerRef}\n            animation = {window.google.maps.Animation.BOUNCE}\n            key={`${party.lat}-${party.lng}`+ Math.random()*100}\n            position={{ lat: party.lat, lng: party.lng }}\n            onClick={() => {\n              markerRef.current.animation = window.google.maps.Animation.BOUNCE;\n              setSelected(party);\n            }}\n\n            icon={{\n              url: `/google-maps.svg`,\n              origin: new window.google.maps.Point(0, 0),\n              anchor: new window.google.maps.Point(30, 55),\n              scaledSize: new window.google.maps.Size(60, 50),\n            }}\n          />\n        )):<h1>Loading</h1>}\n\n        {selected ? (\n          <InfoWindow\n            position={{ lat: selected.lat, lng: selected.lng }}\n            onCloseClick={() => {\n              setSelected(null);\n              setPreviewSource('');\n            }}\n          >\n              <form className=\"ui form \" onSubmit={handleSubmit}>\n                <label  htmlFor=\"venue\">VENUE</label>\n                <input\n                  type=\"text\"\n                  required\n                  placeholder=\"Add venue\"\n                  name=\"venue\"\n                  value={state.venue}\n                  onChange={handleChange}\n                />\n\n                <label  htmlFor=\"genre\">SELECT GENRE</label>\n                <select\n                  placeholder=\"Select Genre\"\n                  required\n                  name=\"genre\"\n                  value={state.genre}\n                  onChange={handleChange}\n                >\n                  <option value=\"\" disabled selected>Select Genre</option>\n                  <option value=\"EDM\">EDM</option>\n                  <option value=\"TECHNO\">TECHNO</option>\n                  <option value=\"ROCK\">ROCK</option>\n                  <option value=\"JAZZ\">JAZZ</option>\n                  <option value=\"LATINO\">LATINO</option>\n                  <option value=\"PSY\">JAZZ</option>\n                </select>\n                <label  htmlFor=\"artists\">ARTISTS</label>\n                <input\n                  type=\"text\"\n                  required\n                  placeholder=\"Artists performing..\"\n                  name=\"artists\"\n                  value={state.artists}\n                  onChange={handleChange}\n                />\n\n                <label  htmlFor=\"date\">DATE & TIME</label>\n                <input\n                  type=\"datetime-local\"\n                  required\n                  name=\"date\"\n                  value={state.date}\n                  onChange={handleChange}\n                  placeholder=\"05/12/2019, 12:09\"\n                />\n                <label  htmlFor=\"instagram\">Link to Instagram account</label>\n                <input\n                  type=\"string\"\n                  required={false}\n                  name=\"instagram\"\n                  value={state.instagram}\n                  onChange={handleChange}\n                  placeholder=\"Add link here..\"\n                />\n                <label  htmlFor=\"partyImage\">Select Image to upload</label>\n                <input\n                    id=\"fileInput\"\n                    type=\"file\"\n                    name=\"image\"\n                    onChange={handleFileInputChange}\n                    value={fileInputState}\n                    className=\"form-input\"\n                    placeholder=\"UpLoad Image\"\n                />\n                <br/>\n                <button className=\"ui animated button primary\" type=\"submit\" disabled={validateForm()}>\n\n                <div class=\"visible content\">SUBMIT</div><div class=\"hidden content\"><i aria-hidden=\"true\" class=\"thumbs up icon\"></i></div>\n                </button>\n              </form>\n          </InfoWindow>\n        ) : null}\n\n        {submitted && previewSource ? (\n          <InfoWindow\n            position={{ lat: parties[parties.length - 1].lat, lng: parties[parties.length - 1].lng }}\n            style={{width:'auto',height:'auto'}}\n            onCloseClick={() => {\n              setSelected(null);\n              setSubmitted(null);\n            }}\n          >\n            <div style={{display:'flex',width:'auto',height:'auto'}}>\n              <h1 style={{position:'absolute', top:120, left:110}}>\n                Party Registered!!\n              </h1>\n              {/* <img src={ party.iconURL || '/dj.svg' } alt=\"icon\"/> */}\n              {/* <img src={ '/dj.svg' } alt=\"icon\"/> */}\n              <img\n                src={previewSource}\n                alt=\"chosen\"\n                style={{ height: '300px' }}\n              />\n\n            </div>\n          </InfoWindow>\n        ) : null}\n\n        {true ? (\n          <Marker\n            className=\"bounce\"\n            zIndex={10}\n            animation = {window.google.maps.Animation.BOUNCE}\n            key={Math.random()*100}\n            position={{ lat: 41.3851, lng: 2.1734}}\n            icon={{\n              url: `/kyle-2.png`,\n              origin: new window.google.maps.Point(0, 0),\n              anchor: new window.google.maps.Point(30, 55),\n              scaledSize: new window.google.maps.Size(60, 50),\n              labelOrigin: new window.google.maps.Point(26,57)\n            }}\n            label={{\n              color: 'crimson', fontWeight: 'bolder', fontSize: '16px', text: 'You are here !',fontFamily: 'Avenir'\n              // origin: new window.google.maps.Point(110, 110),\n              // anchor: new window.google.maps.Point(30, 55),\n            }}\n            labelAnchor={new window.google.maps.Point(200, 0)}\n          />\n        ) :null\n        }\n\n      </GoogleMap>\n\n      <div className=\"PartyList\">\n        {partyList ? (\n          <PartyList partyList={partyList} />\n        ): <h1 style={{zindex:1000}}>\n          No parties in list\n        </h1> }\n\n      </div>\n\n    </div>\n  );\n}\n\nfunction Locate({ panTo }) {\n  return (\n    <button\n      className=\"locate_host\"\n      onClick={() => {\n        window.navigator.geolocation.getCurrentPosition(\n          (position) => {\n            panTo({\n              lat: position.coords.latitude,\n              lng: position.coords.longitude,\n            });\n          },\n          () => null\n        );\n      }}\n    >\n      <img src=\"/compass.svg\" alt=\"compass\" />\n    </button>\n  );\n}\n\nfunction Search({ panTo }) {\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: { lat: () => 41.3851, lng: () => 2.1734 },\n      radius: 100 * 1000,\n    },\n  });\n\n  // https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service#AutocompletionRequest\n\n  const handleInput = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSelect = async (address) => {\n    setValue(address, false);\n    clearSuggestions();\n\n    try {\n      const results = await getGeocode({ address });\n      const { lat, lng } = await getLatLng(results[0]);\n      panTo({ lat, lng });\n    } catch (error) {\n      console.log(\"😱 Error: \", error);\n    }\n  };\n\n  return (\n    <div className=\"search_host\">\n      <Combobox onSelect={handleSelect} className=\"ui icon input\">\n        <ComboboxInput\n          value={value}\n          onChange={handleInput}\n          disabled={!ready}\n          placeholder=\"Search for location or click on compass\"\n          className=\"ui_search\"\n          id=\"ui_search_find\"\n          style={{fontFamily:'Avenir', color:'white'}}\n        />\n        <i aria-hidden=\"false\" className=\"search icon large\" id=\"search_icon\"></i>\n        <ComboboxPopover>\n          <ComboboxList>\n            {status === \"OK\" &&\n              data.map(({ id, description }) => (\n                <ComboboxOption key={id + Math.random()*1000 } value={description} style={{fontFamily:'Avenir', color:'white', backgroundColor:'black'}} />\n              ))}\n          </ComboboxList>\n        </ComboboxPopover>\n      </Combobox>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}