{
  "_args": [
    [
      "use-places-autocomplete@1.3.10",
      "/Users/rushabhmehta/Codeworks/Legacy Project/PARTY-FORECAST"
    ]
  ],
  "_from": "use-places-autocomplete@1.3.10",
  "_id": "use-places-autocomplete@1.3.10",
  "_inBundle": false,
  "_integrity": "sha512-2WhezFliaLhfFX7NO12Y+gSzmdiml/l4KCyFKKk4cjtWR6mWTXuNs66ZJrm4beTRPBugngCyo2AmPy98AvlZpQ==",
  "_location": "/use-places-autocomplete",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "use-places-autocomplete@1.3.10",
    "name": "use-places-autocomplete",
    "escapedName": "use-places-autocomplete",
    "rawSpec": "1.3.10",
    "saveSpec": null,
    "fetchSpec": "1.3.10"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/use-places-autocomplete/-/use-places-autocomplete-1.3.10.tgz",
  "_spec": "1.3.10",
  "_where": "/Users/rushabhmehta/Codeworks/Legacy Project/PARTY-FORECAST",
  "author": {
    "name": "Welly Shen",
    "email": "hivoid19@gmail.com",
    "url": "https://github.com/wellyshen"
  },
  "babel": {
    "presets": [
      "@babel/env",
      "@babel/typescript",
      "@babel/react"
    ],
    "plugins": [
      "@babel/proposal-object-rest-spread"
    ],
    "env": {
      "development": {
        "presets": [
          "@emotion/babel-preset-css-prop"
        ],
        "plugins": [
          "emotion"
        ]
      }
    }
  },
  "bugs": {
    "url": "https://github.com/wellyshen/use-places-autocomplete/issues"
  },
  "dependencies": {
    "lodash.debounce": "^4.0.8"
  },
  "description": "React hook for Google Maps Places Autocomplete.",
  "devDependencies": {
    "@babel/core": "^7.10.4",
    "@babel/plugin-proposal-object-rest-spread": "^7.10.4",
    "@babel/preset-env": "^7.10.4",
    "@babel/preset-react": "^7.10.4",
    "@babel/preset-typescript": "^7.10.4",
    "@emotion/babel-preset-css-prop": "^10.0.27",
    "@emotion/core": "^10.0.28",
    "@rollup/plugin-babel": "^5.0.4",
    "@rollup/plugin-commonjs": "^13.0.0",
    "@rollup/plugin-html": "^0.2.0",
    "@rollup/plugin-node-resolve": "^8.1.0",
    "@rollup/plugin-replace": "^2.3.3",
    "@rollup/plugin-url": "^5.0.1",
    "@testing-library/react": "^10.4.5",
    "@testing-library/react-hooks": "^3.3.0",
    "@types/googlemaps": "^3.39.9",
    "@types/jest": "^26.0.4",
    "@types/lodash.debounce": "^4.0.6",
    "@types/react": "^16.9.43",
    "@types/react-dom": "^16.9.8",
    "babel-plugin-emotion": "^10.0.33",
    "eslint": "^7.2.0",
    "eslint-config-welly": "^1.3.0",
    "husky": "^4.2.5",
    "jest": "^26.1.0",
    "lint-staged": "^10.2.11",
    "normalize.css": "^8.0.1",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.0.5",
    "react": "^16.13.1",
    "react-cool-onclickoutside": "latest",
    "react-dom": "^16.13.1",
    "react-test-renderer": "^16.13.1",
    "rimraf": "^3.0.2",
    "rollup": "^2.21.0",
    "rollup-plugin-copy": "^3.3.0",
    "rollup-plugin-livereload": "^1.3.0",
    "rollup-plugin-postcss": "^3.1.2",
    "rollup-plugin-serve": "^1.0.1",
    "rollup-plugin-size-snapshot": "^0.12.0",
    "rollup-plugin-terser": "^6.1.0",
    "stylelint": "^13.6.1",
    "stylelint-config-prettier": "^8.0.2",
    "stylelint-config-standard": "^20.0.0",
    "stylelint-prettier": "^1.1.2",
    "ts-jest": "^26.1.1",
    "typescript": "^3.9.6"
  },
  "engines": {
    "node": ">=10",
    "npm": ">=6"
  },
  "eslintConfig": {
    "extends": [
      "welly"
    ],
    "rules": {
      "camelcase": "off",
      "no-console": [
        "warn",
        {
          "allow": [
            "warn",
            "error"
          ]
        }
      ],
      "@typescript-eslint/camelcase": "off",
      "emotion/jsx-import": "off"
    }
  },
  "eslintIgnore": [
    "src/use-places-autocomplete.d.ts",
    "public",
    "dist"
  ],
  "files": [
    "dist"
  ],
  "homepage": "https://use-places-autocomplete.netlify.app",
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "yarn test"
    }
  },
  "jest": {
    "preset": "ts-jest",
    "moduleNameMapper": {
      "\\.(apng|bmp|gif|ico|cur|jpg|jpeg|jfif|pjpeg|pjp|png|svg|tif|tiff|webp)$": "<rootDir>/__mocks__/file.ts"
    },
    "collectCoverageFrom": [
      "src/*.(ts|tsx)",
      "!src/*.d.ts",
      "!src/index.ts"
    ]
  },
  "keywords": [
    "react",
    "hook",
    "react-hook",
    "places-autocomplete-hook",
    "use",
    "use-places-autocomplete",
    "places",
    "places-autocomplete",
    "places-autocomplete-service",
    "autocomplete",
    "autocomplete-service",
    "google-places",
    "google-places-api",
    "google-places-autocomplete",
    "google-api",
    "google-maps",
    "google-maps-api",
    "google-maps-places",
    "google-maps-places-api",
    "location",
    "address",
    "form",
    "geocoding",
    "geocoding-api",
    "typescript"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.{js,ts,tsx}": "eslint --fix",
    "*.{css,ts,tsx}": "stylelint --fix",
    "*.{json,md,yml}": "prettier --write"
  },
  "main": "dist/index.js",
  "module": "dist/index.esm.js",
  "name": "use-places-autocomplete",
  "peerDependencies": {
    "react": ">= 16.8.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/wellyshen/use-places-autocomplete.git"
  },
  "scripts": {
    "build": "run-s build:*",
    "build:demo": "yarn clean:dev && yarn clean:demo && rollup -c rollup/config.js --environment BUILD:demo",
    "build:dist": "yarn clean:dist && BABEL_ENV=dist rollup -c rollup/config.js --environment BUILD:dist",
    "clean": "run-p clean:*",
    "clean:cov": "rimraf coverage",
    "clean:demo": "rimraf public",
    "clean:dev": "rimraf demo/.dev",
    "clean:dist": "rimraf dist .size-snapshot.json",
    "dev": "yarn clean:dev && rollup -c rollup/config.js -w --environment BUILD:dev",
    "lint": "run-p lint:*",
    "lint:code": "eslint --fix . --ext .js,.ts,.tsx",
    "lint:style": "stylelint --fix \"**/*.{css,ts,tsx}\"",
    "postversion": "git push --follow-tags --no-verify && npm publish && yarn clean:dist",
    "preversion": "run-s type-check lint test build:dist",
    "test": "jest",
    "test:cov": "yarn clean:cov && yarn test --coverage",
    "test:watch": "yarn test --watch",
    "type-check": "tsc --noEmit",
    "type-check:watch": "yarn type-check --watch"
  },
  "stylelint": {
    "plugins": [
      "stylelint-prettier"
    ],
    "extends": [
      "stylelint-config-standard",
      "stylelint-config-prettier"
    ],
    "rules": {
      "prettier/prettier": true
    },
    "ignoreFiles": [
      "public/**/*.css",
      "coverage/**/*.css"
    ]
  },
  "types": "dist/index.d.ts",
  "version": "1.3.10"
}
